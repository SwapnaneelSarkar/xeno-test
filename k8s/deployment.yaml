apiVersion: apps/v1
kind: Deployment
metadata:
  name: xeno-fde-backend
  namespace: xeno-fde-backend
  labels:
    app: xeno-fde-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: xeno-fde-backend
  template:
    metadata:
      labels:
        app: xeno-fde-backend
    spec:
      containers:
      - name: xeno-fde-backend
        image: xeno-fde-backend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: xeno-fde-backend-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: xeno-fde-backend-config
              key: PORT
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: xeno-fde-backend-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: xeno-fde-backend-config
              key: REDIS_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: xeno-fde-backend-config
              key: LOG_LEVEL
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: xeno-fde-backend-secrets
              key: DATABASE_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: xeno-fde-backend-secrets
              key: JWT_SECRET
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: xeno-fde-backend-secrets
              key: WEBHOOK_SECRET
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: xeno-fde-backend-secrets
              key: SENTRY_DSN
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always
